/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'vedab' at '1/2/15 2:47 PM' with Gradle 1.11
 *
 * This generated file contains a commented-out sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at http://gradle.org/docs/1.11/userguide/tutorial_java_projects.html
 */

// Apply the java plugin to add support for Java
apply plugin: 'java'

//Step-1: Spring boot plugin
apply plugin: 'spring-boot'


//Scripts/Components to use during Build
buildscript {
	repositories {
		mavenCentral()
	}
	dependencies{
		//Step-2: Spring boot plugin-package
		classpath("org.springframework.boot:spring-boot-gradle-plugin:1.2.0.RELEASE")
	}
}

// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'maven central' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    mavenCentral()
}

// In this section you declare the dependencies for your production and test code
dependencies {

	//Step-3: Spring boot starter web
	compile("org.springframework.boot:spring-boot-starter-web")
	
	//Step-3.1:  [OPTIONAL] If you need additional information about the application use this.
	compile("org.springframework.boot:spring-boot-starter-actuator")

    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
    testCompile "junit:junit:4.11"
}
